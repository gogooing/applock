apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyyMMddHHmm")
}

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.sanqiu.loro.applocktest"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/res']
            aidl.srcDirs = ['src/main/java', 'src/main/aidl', 'src/main/aidl/']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    signingConfigs {
        release {
            storeFile file("../android.keystore")
            storePassword "123456"
            keyAlias "android.keystore"
            keyPassword "123456"
        }
    }

    buildTypes {
        debug {
            buildConfigField("int", "APP_STATUS", "0")
            versionNameSuffix "_debug"

            signingConfig signingConfigs.release
            multiDexEnabled true
            debuggable true
            versionNameSuffix "_debug"

        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'

            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            signingConfig signingConfigs.release
            //解决包名不能超过6W
            multiDexEnabled true
            buildConfigField("int", "APP_STATUS", "2")
//            versionNameSuffix ".${svnRevision()}"
        }


        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "xxx_${defaultConfig.versionName}_${releaseTime()}.apk"
            }
        }
    }

    android {
        useLibrary 'org.apache.http.legacy'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    compile 'org.jsoup:jsoup:1.9.2'
    compile 'com.alibaba:fastjson:1.2.46'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
}
